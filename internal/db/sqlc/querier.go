// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// Mobile phone number
	// Check if a user exists by email
	CheckUserExistsByEmail(ctx context.Context, email pgtype.Text) (uuid.UUID, error)
	// Check if a user exists by mobile
	CheckUserExistsByMobile(ctx context.Context, mobile string) (uuid.UUID, error)
	// Create a new user
	CreateUser(ctx context.Context, arg CreateUserParams) error
	// UUID of the user
	// Get all users
	GetAllUsers(ctx context.Context) ([]GetAllUsersRow, error)
	// Get a user by ID
	GetUserByID(ctx context.Context, id uuid.UUID) (GetUserByIDRow, error)
	// UUID of the user
	// Permanently delete a user by ID
	HardDeleteUser(ctx context.Context, id uuid.UUID) error
	// UUID of the user
	// Delete a user by ID (Soft Delete)
	SoftDeleteUser(ctx context.Context, arg SoftDeleteUserParams) error
	// Email address
	// Update a user by ID
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
}

var _ Querier = (*Queries)(nil)
